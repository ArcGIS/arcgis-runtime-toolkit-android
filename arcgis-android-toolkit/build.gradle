group = GROUP
version = VERSION_NAME

apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.artifactory'
// We need the patched maven plugin since 'install' task is overriden by 'installDebugTest', see: https://github.com/dcendents/android-maven-plugin
apply plugin: 'android-maven'
apply from: "$rootProject.projectDir/versions.gradle"

android {
    compileSdkVersion droid.targetSdk
    buildToolsVersion droid.buildTools

    defaultConfig {
        minSdkVersion droid.minSdk
        targetSdkVersion droid.targetSdk
        versionCode 100
        versionName "100.2.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

gradle.projectsEvaluated {
    artifactoryPublish.dependsOn assembleRelease
}

// custom configurations
// jaxDoclet is for building custom doclava doclet in javadocs
// published is for artifactory
configurations {
    jaxDoclet
    published
}

// snapshots publish to snapshots repo, release publish to arcgis repo
String localRepo = version.endsWith('SNAPSHOT') ? 'snapshots-local' : 'arcgis-local'

// add apache licese to POM
configure(install.repositories.mavenInstaller) {
    pom.project {
        licenses {
            license {
                name 'The Apache Software License, Version 2.0'
                url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                distribution 'repo'
            }
        }
    }
}

artifactory {
    def artifactoryUsername = project.hasProperty('ARTIFACTORY_USER') ? ARTIFACTORY_USER : null
    def artifactoryPassword = project.hasProperty('ARTIFACTORY_PASSWORD') ? ARTIFACTORY_USER : null

    contextUrl = ARTIFACTORY_URL

    // disable publish task if artifactory credentials have not been set
    artifactoryPublish.enabled = artifactoryUsername && artifactoryPassword

    publish {
        repository {
            repoKey = localRepo //The artifactory repository key to publish to
            if (artifactoryUsername) {
                username = ARTIFACTORY_USER //The publisher user name, property taken from gradle.properties
            }
            if (artifactoryPassword) {
                password = ARTIFACTORY_PASSWORD //The publisher password, property taken from gradle.properties
            }
        }
        defaults {
            // artifacts to be published to Artifactory.
            publishConfigs('archives', 'published')
            publishArtifacts = true
            publishPom = true //Publish generated POM files to Artifactory (true by default)
            publishIvy = false //Publish generated Ivy descriptor files to Artifactory (true by default)
        }
    }
    resolve {
        repoKey = 'arcgis' //The Artifactory (preferably virtual) repository key to resolve from
    }
}

dependencies {
    // custom doclava doclet
    jaxDoclet 'com.google.doclava:doclava:1.0.6'

    implementation "com.android.support:appcompat-v7:$droid.support"
    implementation "com.esri.arcgisruntime:arcgis-android:$arcgis"
    testImplementation "junit:junit:$test.jUnit"
    androidTestImplementation("com.android.support.test.espresso:espresso-core:$test.espresso", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
}

// generate build date for use in javadoc meta-tags
static def buildDate() {
    def date = new Date()
    def formatDate = date.format('yyyy-MM-dd')
    return formatDate
}